/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default         none;

    div(phi,U)      Gauss limitedLinearV 1;
    div(phi,Yi_h)   Gauss limitedLinear 1;
    div(phi,h)   Gauss limitedLinear 1;
    div(phi,K)      Gauss limitedLinear 1;
    div(phid,p)     Gauss limitedLinear 1;
    div(phi,omega) Gauss limitedLinear 1;
    div(phi,k) Gauss limitedLinear 1;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
    div(meshPhi,p)  Gauss limitedLinear 1;
}

laplacianSchemes
{
    default         Gauss linear uncorrected;
    laplacian(muEff,U) Gauss linear uncorrected;
    laplacian(mut,U) Gauss linear uncorrected;
    laplacian(DkEff,k) Gauss linear uncorrected;
    laplacian(DepsilonEff,epsilon) Gauss linear uncorrected;
    laplacian((rho*(1|A(U))),p) Gauss linear uncorrected;
    laplacian(alphaEff,h) Gauss linear uncorrected;
}

interpolationSchemes
{
    default          linear;
    reconstruct(p) vanLeer;
    reconstruct(U)   vanLeerV; // Van Leer for Vectors
    reconstruct(rhoU)   vanLeerV; // Van Leer for Vectors
    reconstruct(tauEff)   vanLeer;
}

snGradSchemes
{
    default         uncorrected;
}

wallDist
{
       method meshWave;
}

fluxRequired
{
    default         no;

	p;
}

// ************************************************************************* //
